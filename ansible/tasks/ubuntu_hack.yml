# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: MPL-2.0
---
#Conditionally defer cloud-init to second boot, allowing vmtools customization on first boot and reboot
- name: Adding "disable_vmware_customization= true" to /etc/cloud/cloud.cfg
  lineinfile:
    line: "disable_vmware_customization: true"
    path: /etc/cloud/cloud.cfg

- name: Create directory for services
  file:
    path: /usr/lib/vmware-vmservice
    state: directory
    mode: 0755

- name: Create disable-cloud-init-networking file
  copy:
    src: files/usr/lib/vmware-vmservice/disable-cloud-init-networking
    dest: /usr/lib/vmware-vmservice/disable-cloud-init-networking
    mode: 0755

- name: Create disable-cloud-init-networking.service file
  copy:
    src: files/usr/lib/vmware-vmservice/disable-cloud-init-networking.service
    dest: /usr/lib/vmware-vmservice/disable-cloud-init-networking.service

- name: Create defer-cloud-init-generator file
  copy:
    src: files/usr/lib/vmware-vmservice/defer-cloud-init-generator
    dest: /usr/lib/vmware-vmservice/defer-cloud-init-generator
    mode: 0755

- name: Create directory for system generators
  file:
    path: /etc/systemd/system-generators
    state: directory
    mode: 0755

- name: Create a symlink between two files
  file:
    src: /usr/lib/vmware-vmservice/defer-cloud-init-generator
    dest: /etc/systemd/system-generators/vmware-vmservice-defer-cloud-init-generator
    state: link

- name: Create a symlink between two machine-id files
  file:
    src: /etc/machine-id
    dest: /var/lib/dbus/machine-id
    state: link

- name: Clean up added directories and files
  file:
    path: "{{ vm_files }}"
    state: absent
  vars:
    vm_files:
      - ssh_host_*
      - vmware*
      - cloud*

- name: Clean up cloud-init
  command:
    cmd: cloud-init clean --seed --logs

# Upstream image-builder creates this config as we are again doing the cloud-init clean
# this file will be removed so creating the ds-identify.cfg for Ubuntu 22.04 or above
- name: Create cloud-init datasource config file
  copy:
    dest: /etc/cloud/ds-identify.cfg
    force: true
    content: |
      datasource: VMware
  when: ansible_distribution_version is version('22.04', '>=')

# sudo apt-get install --install-recommends linux-generic-hwe-22.04
- name: Enabling Ubuntu HWE kernel
  ansible.builtin.apt:
    install_recommends: true
    name: linux-generic-hwe-{{ ansible_distribution_version }}
  when: ( enable_ubuntu_hwe is defined ) and ( enable_ubuntu_hwe|bool == True )

- name: Apply mtu netplan patch
  when: ansible_distribution_version is version('24.04', '>=')
  block:
    - name: Copy netplan patch file
      copy:
        dest: /tmp/netplan.patch
        force: true
        content: |
          --- /usr/lib/python3/dist-packages/cloudinit/net/netplan.py	2025-06-02 09:55:22.452857671 +0000
          +++ /usr/lib/python3/dist-packages/cloudinit/net/netplan.py_2	2025-06-02 06:14:40.349638339 +0000
          @@ -348,7 +348,7 @@
                   content = header + content

                   netplan_config_changed = has_netplan_config_changed(fpnplan, content)
          -        if not netplan_api_write_yaml_file(content):
          +        if True:
                       fallback_write_netplan_yaml(fpnplan, content)

                   if self.clean_default:
    - name: Apply the netplan patch
      ansible.builtin.command: patch -i /tmp/netplan.patch /usr/lib/python3/dist-packages/cloudinit/net/netplan.py

- name: Create symlinks for grub2 configs
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - { src: "/usr/bin/grub-editenv", dest: "/usr/bin/grub2-editenv" }
    - { src: "/boot/grub/grub.cfg", dest: "/etc/grub2.cfg" }
