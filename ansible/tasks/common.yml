# © Broadcom. All Rights Reserved.
# The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
# SPDX-License-Identifier: MPL-2.0
---
- name: Configure /etc/sysctl.d/80-bridged-net-traffic.conf
  copy:
    src: files/etc/sysctl.d/80-bridged-net-traffic.conf
    dest: /etc/sysctl.d/80-bridged-net-traffic.conf
    mode: 0644

- name: add errors=panic to fstab for / partition
  script: files/scripts/ova-custom-patch.sh

- name: Create vmtoolsd.service.d
  file:
    path: /etc/systemd/system/vmtoolsd.service.d/
    state: directory
    mode: 0755

- name: Configure /etc/vmware-tools/tools.conf
  copy:
    src: files/etc/vmware-tools/tools.conf
    dest: /etc/vmware-tools/tools.conf
    mode: 0644

- name: Create autorestart.conf
  copy:
    src: files/etc/systemd/system/vmtoolsd.service.d/autorestart.conf
    dest: /etc/systemd/system/vmtoolsd.service.d/autorestart.conf
    mode: 0644

- name: Copy Log Redirection Script
  copy:
    src: files/scripts/log_redirect.sh
    dest: /opt/log_redirect.sh
    mode: 0755

- name: Create systemd logredirector.service
  copy:
    src: files/etc/systemd/system/logredirector.service
    dest: /etc/systemd/system/logredirector.service
    mode: 0644

- name: Restart logredirector service
  systemd:
    name: logredirector
    daemon_reload: yes
    enabled: True
    state: restarted

- name: Configure /usr/local/bin/kubeadm
  copy:
    src: files/usr/local/bin/kubeadm
    dest: /usr/local/bin/kubeadm
    mode: 0755

- name: Copy script kubernetes_non_root.sh
  ansible.builtin.copy:
    src: files/scripts/kubernetes_non_root.sh
    dest: /etc/profile.d/kubernetes_non_root.sh
    mode: 0644

- name: Copy CIS hardening script
  copy:
    src: files/scripts/cis_hardening.sh
    dest: /usr/local/bin/cis_hardening.sh
    mode: 0755

- name: Copy systemd unit for CIS hardening
  copy:
    src: files/etc/systemd/system/cishardening.service
    dest: /etc/systemd/system/cishardening.service

- name: Enable CIS hardening service
  systemd:
    name: cishardening.service
    daemon_reload: yes
    enabled: true
    state: restarted

# TODO(KK) Investigate difference between upstream yaml and this
- name: Configure /etc/crictl.yaml
  copy:
    src: files/etc/crictl.yaml
    dest: /etc/crictl.yaml
    mode: 0644

- name: Replace containerd systemd file
  copy:
    src: etc/systemd/system/containerd.service
    dest: /etc/systemd/system/containerd.service
    mode: 0644

- name: Symlink docker.service to containerd.service
  file:
    src: "/etc/systemd/system/containerd.service"
    dest: "/usr/lib/systemd/system/docker.service"
    state: link

- name: Create audit log directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "/var/log/kubernetes"
    - "/var/log/kubernetes/audit"

- name: Create /usr/lib/vmware-wcpgc-manifests directory
  file:
    path: /usr/lib/vmware-wcpgc-manifests/
    state: directory
    mode: 0644

- name: Add guest cluster artifacts
  get_url:
    url: "{{ item }}"
    dest: /usr/lib/vmware-wcpgc-manifests/
    mode: 0644
  ignore_errors: yes
  loop: "{{ gcAuthArtifacts.split(',') }}"
  retries: 5
  delay: 3

- name: Ensure /etc/kubernetes/manifests dir exists
  file:
    path: /etc/kubernetes/manifests
    state: directory

- import_tasks: docker-registry-service.yml

- name: Copy containerd config.toml
  template:
    src: "etc/containerd/config_v2.toml"
    dest: "/etc/containerd/config.toml"
    mode: 0644

- name: Restart containerd service with custom config.toml
  systemd:
    name: containerd
    daemon_reload: yes
    enabled: True
    state: restarted

- name: Ensure localRegistry storage dir exists
  file:
    path: /storage/container-registry
    state: directory

# VM will be unable to reach github after the iptables rules are configured.
# Hence, goss binary is pre-downloaded to a new tmp space as /tmp get cleaned.
# /tmp/tmp.fstab is used as ansible cannot mount non-persistent mount point.
- name: Create /tkgs-tmp for goss
  mount:
    path: /tkgs-tmp
    src: "tmpfs"
    fstype: tmpfs
    state: mounted
    fstab: /tmp/tmp.fstab

- name: Download goss binary
  ansible.builtin.get_url:
    url: "https://github.com/aelsabbahy/goss/releases/download/v0.3.16/goss-linux-amd64"
    dest: /tkgs-tmp/goss-linux-amd64
    mode: 0755
  retries: 5
  delay: 3
  when: kubernetes_semver is version('v1.31.0', '<')

- name: Disable containerd service
  systemd:
    name: "{{ item }}"
    enabled: no
  loop:
    - "containerd"

- name: Remove cloud-init boot-order conf files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/etc/systemd/system/cloud-config.service.d/boot-order.conf"
    - "/etc/systemd/system/cloud-final.service.d/boot-order.conf"

- name: Unload nouveau
  template:
    src: "etc/modprobe.d/blocklist-nouveau.conf"
    dest: "/etc/modprobe.d/blocklist-nouveau.conf"
    mode: 0644
  ignore_errors: true

- name: Unload amdgpu
  template:
    src: "etc/modprobe.d/blocklist-amdgpu.conf"
    dest: "/etc/modprobe.d/blocklist-amdgpu.conf"
    mode: 0644
  ignore_errors: true

- name: Update initramfs
  command: "{{ systemd_networkd_update_initramfs }}"
  when: (systemd_networkd_update_initramfs is defined) and (systemd_networkd_update_initramfs | length > 0)

- name: Copy /etc/systemd/journald.conf
  ansible.builtin.template:
    src: "etc/systemd/journald.conf"
    dest: "/etc/systemd/journald.conf"
    owner: root
    group: root
    mode: 0644
